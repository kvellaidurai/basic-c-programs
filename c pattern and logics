1 print the pattern

#include <stdio.h>
int main() {
   int n=3,a,c,d;
   a=n*2-1;
   for(int i=0;i<a;i++)
   {
       for(int j=0;j<a;j++)
       {
         c=abs(i-a/2);
         d=abs(j-a/2);
       if(c>d)
       {
       printf("%d",c+1);
           
       }
       else
       {
       printf("%d",d+1);
           
       }
           
       }
       printf("\n");
   }
   }
o/p
33333
32223
32123
32223
33333


2.findthe odd factorsbetween two numbers
#include <stdio.h>

int main()
{
    int n=10,m=40,d=0;
    for(int i=n;i<=m;i++){
        int c=0;
        for(int j=1;j<=i;j++){
            if(i%j==0)
            c++;
        }
        if(c%2==1)
        d++;
    }
    printf("%d",d);
}

o/p=3

3.print the pattern

#include <stdio.h>

int main() {
	int n=4;
	for(int i=1;i<=n;i++)
	{
	    for(int j=1;j<=i;j++)
	    {   if(j==1)
	        printf("%d",j);
	        else
	        printf("*%d",j);
	    }
	    printf("\n");
	}
	
}
o/p

1
1*2
1*2*3
1*2*3*4


4.eight cells

#include <stdio.h>

int main() {
int n=8,day=3;
int arr[]={1,0,0,1,0,0,1,0};
int itr,itr1,ans[n];
for(itr1=1;itr1<=day;itr1++)
{
   ans[0]=arr[1];
   ans[7]=arr[6];
   for(itr=1;itr<7;itr++)
   {
   ans[itr]=arr[itr-1]^arr[itr+1];
   }
   for(itr=0;itr<8;itr++)
   {
     arr[itr]=ans[itr];
   }
       
}
for(itr=0;itr<8;itr++)
{
  printf("%d ",arr[itr]);
}
}

o/p=1 0 1 0 1 1 1 0 


5.fibonacci pattern


import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner in=new Scanner(System.in);
		int n=in.nextInt();
		int a=1,b=0;
		for(int i=0;i<n;i++)
		{
		    for(int j=0;j<=i;j++)
		    {
		        int c=a+b;
		        System.out.print(c+" ");
		        a=b;
		        b=c;
		    }
		    System.out.println();
		}
	}
}

o/p

1 
1 2 
3 5 8 
13 21 34 55 
89 144 233 377 610 


5.alternate add sub

int a=0;
		if(input2==1)
		{
        	for(int i=input1;i>0;i=i-2)
        	{
				a+=i;
			}
			for(int j=input1-1;j>0;j=j-2)
			{
				a-=j;
			}
		}
		else
		{	a=input1;
			for(int i=input1-2;i>0;i=i-2)
			{
				a-=i;
			}
			for(int j=input1-1;j>0;j=j-2)
			{
				a+=j;
			}

		}
		return a;
	}
}

            	
      o/p=6-5+4-3+2-1...
      
  
6.nambiar number

String ans="";
        int e=Integer.parseInt(String.valueOf(input1.charAt(0)));
        int s=e;
        int ck=0;
        boolean evn=false,odd=false;
        if(e%2==0)
            evn=true;
        else
            odd=true;
        for(int i=1;i<input1.length();i++)
        {
            ck=0;
            s=s+Integer.parseInt(String.valueOf(input1.charAt(i)));
            if(evn)
            {
                if(s%2==1)
                {
                    ans+=String.valueOf(s);
                    s=0;
                    ck=1;
                    if(i+1!=input1.length())
                    {
                        e=Integer.parseInt(String.valueOf(input1.charAt(i+1)));
                        if(e%2==0)
                        {
                            evn=true;
                            odd=false;
                        }
                        else
                        {
                            odd=true;
                            evn=false;
                        }
                    }
                }
            }
            else
            {
                if(s%2==0)
                {
                    ans+=String.valueOf(s);
                    s=0;
                    ck=1;
                    if(i+1!=input1.length())
                    {
                        e=Integer.parseInt(String.valueOf(input1.charAt(i+1)));
                        if(e%2==0)
                        {
                            evn=true;
                            odd=false;
                        }
                        else
                        {
                            odd=true;
                            evn=false;
                        }
                    }
                }
            }
        }
        if(ck==0)
        {
            ans+=String.valueOf(s);
        }
        return Integer.parseInt(ans);
o/p=9867054332





